{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACnI8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,+BAA+B,UAAU,MAAM,SAAS;AACxD,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,GAAG,+DAAW;AACd;AACA;AACA,sBAAsB,iCAAiC;AACvD;AACA,QAAQ,GAAG;AACX,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iCAAiC;AACpE;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC;AAC3D;AACA;AACA;AACA;AACA;AACA,8BAA8B,KAAK,MAAM,OAAO;AAChD,qDAAqD,MAAM;AAC3D,mDAAmD,MAAM;AACzD;AACA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;ACzGyB;AACA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAS;AACjB;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AClGpB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACD;;;;;;;;;;;;;;;ACrFpB,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACzNrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AC7CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AC3DpB;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,aAAa;AACb;AACA,SAAS;AACT;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,IAAI,YAAY,WAAW,IAAI;AAC9E;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,IAAsB;AACtB;;;;;;UC9BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACA;AACA;AACA;AACE;AACJ;AACQ;AAC1C;AACA;AACA;AACA;AACA,0CAA0C,yDAAS;AACnD;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,yDAAI;AACR,CAAC;AACD;AACA","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n    //Calculator\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    //Создаем переменные где в качестве дефолтных выбираем пол и активность\r\n    let sex, height, weight, age, ratio;\r\n\r\n    //Делаем проверку и в качестве дефолтных выбираем пол и активность из localStorage\r\n    if(localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if(localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    //Создаем функцию которая выводит результат в калькулятор\r\n    function calcTotal() {\r\n\r\n        //Проверяем что все инпуты заполнены и все настройки калькулятора выставлены:\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '_____'; // Выводим какое либо сообщение о том что не все заполнено\r\n            return;\r\n        }\r\n\r\n        //Расчет формулы для мужчины и для женщины:\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }    \r\n    }\r\n\r\n    calcTotal();\r\n\r\n    //Создаем функцию которая собирает информацию со статических объектах в калькуляторе\r\n    function getStaticInformation (selector, activeClass) {\r\n        //Создаем переменную которая получает все div у родителя parentSelector\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        //Отслеживаем все клики по элементам \r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                //Проверяем если юзер кликнул на элемент содержайщий дата атрибут data-ratio мы его вытаскиваем и переключаем. Иначе если у нас элемент содержит id тогда мы вытаскиваем и переключаем его уже\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n        \r\n                //После того как получили элемент на который кликаем, мы сперва убираем класс активности у всех элементов и добавляем класс активности только к тому элементу на который мы кликнули\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n        \r\n                e.target.classList.add(activeClass);\r\n        \r\n                //Постоянно вызываем нашу функцию расчета каждый раз когда у нас меняется что либо\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    //Вызываем функцию у которой берем все те блоки (добавляем div) где у нас выбор пола и где выбор активности:\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    //Создаем функцию которая собирает информацию с инпутов в калькуляторе\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '2px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            //С помощью switch case проверяем соответствие строки тому id инпута который мы в данный момент заполняем и преобразуем в числовой формат данных\r\n            switch(input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            //Постоянно вызываем нашу функцию расчета каждый раз когда у нас меняется что либо\r\n            calcTotal();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    //Вызываем функцию у которой берем те блоки где у нас стоят определенные id инпутов:\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nexport default calc;","import {getResource} from '../services/services';\r\n\r\nfunction cards() {\r\n    //Menu item\r\n\r\n    //Создаем класс конструктор для наших карточек товара, последний аргумент будет rest как дефолтное значение:\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector); //То, куда мы будем помещать наш созданный div\r\n            this.transfer = 27;\r\n            this.changeToUAH(); //После создания новой карточки у нас выполнится эта функция и в this.price запишется уже сконвертированная валюта\r\n        }\r\n        //Метод для конвертации доллары в гривны:\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        //Метод для формирования верстки:\r\n        render() {\r\n            const element = document.createElement('div');\r\n\r\n            //Для создания дефолтного значения для rest аргумента ...classes используем условие:\r\n            if (this.classes.length == 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            //Создаем структуру HTML и помещаем ее в element:\r\n            element.innerHTML = `\r\n                    <img src=${this.src} alt=${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                    </div>\r\n                `;\r\n            this.parent.append(element); //Помещаем новосозданный элемент в родительский DOM-элемент\r\n        }\r\n    }\r\n\r\n\r\n   //Создаем объекты(карточки товара) и вызываем метод render(отрисовка HTML структуры) путем вызова функии getResource:\r\n   getResource('http://localhost:3000/menu')\r\n   //берем массив data который вернулся с сервера и перебираем его\r\n   .then(data => {\r\n       data.forEach(({img, altimg, title, descr, price}) => {\r\n           new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n       }); //массив состоит из объектов. Сперва деструктуризируем объект. Создаем столько карточек товаров, сколько объектов есть в базе данных. В конце конструктора прописываем родителя куда будем пушить эти карточки товаров\r\n   });\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // //Если нам нужно построить карточки с помощью библиотеки axios: \r\n    // axios.get('http://localhost:3000/menu')\r\n    //     .then(data => {\r\n    //         data.data.forEach(({img, altimg, title, descr, price}) => {\r\n    //             new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    //         });\r\n    //     });\r\n   \r\n\r\n \r\n\r\n    // //Если нам нужно построить карточки товаров БЕЗ шаблонизатора:    \r\n    // getResource('http://localhost:3000/menu')\r\n    //     .then(data => createCard(data));\r\n\r\n    // function createCard(data) {\r\n    //     data.forEach(({img, altimg, title, descr, price}) => {\r\n    //         const element = document.createElement('div');\r\n\r\n    //         element.classList.add('menu__item');\r\n\r\n    //         element.innerHTML = `\r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Цена:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //             </div>\r\n    //         `;\r\n\r\n    //         document.querySelector('.menu .container').append(element);\r\n    //     });\r\n    // }\r\n\r\n\r\n\r\n}\r\n\r\nexport default cards;\r\n","import {closeModal, openModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    //Forms\r\n\r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    //Создаем объект - хранилище сообщений которое мы хотим показать пользователю\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    //Подвязываем функию postData ко всем формам на сайте:\r\n    forms.forEach(item => {\r\n        bindpostData(item);\r\n    });\r\n\r\n    function bindpostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            //Создаем картинку спиннер которая будет показываться при загрузке отправки формы на серв:\r\n            let statusMessage = document.createElement('img');\r\n            //Устанавливаем атрибут src для нашего img и ссылаемся на свойство объекта message:\r\n            statusMessage.src = message.loading;\r\n            //Применяем inline стили для нашего спиннера:\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            // form.appendChild(statusMessage); // отправляем на нашу html страницу в форму cообщение\r\n\r\n            //Для того чтобы спиннер добавлялся после ниже формы используем метод insertAdjacentElement и в аргументах используем (куда вставляем, что вставялем):\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n        \r\n            //создаем переменную куда заносим все данные с формы\r\n            const formData = new FormData(form);//очень важно чтобы в верстке в input'ах был атрибут name= иначе FormData не сможет найти этот input\r\n\r\n            //Прием для преобразования FormData в JSON формат:\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n            \r\n            //Создаем запрос на сервер с помощью fetch и отправляем данные на сервер:\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {\r\n                console.log(data);                \r\n                //Если у нас данные на серв загрузились и ответ вернулся с кодом 200 (Ок) создаем успешное сообщение:\r\n                showThanksModal (message.success);                                \r\n                //Удаляем спиннер который есть на странице:\r\n                statusMessage.remove();\r\n            }).catch(() => {\r\n                // Если ошибка то показываем сообщение об ошибке:\r\n                showThanksModal (message.failure);\r\n            }).finally(() => {\r\n                //очистка value в input'ах формы:\r\n                form.reset();\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    //Создаем функцию показа сообщения при успешной отправки формы на сервер:\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        //Скрываем в модальном окне прошлый контент с инпутами и кнопкой:\r\n        prevModalDialog.classList.add('hide');\r\n        openModal('.modal', modalTimerId);\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n            `;\r\n\r\n        //Добавляем наш созданный элемент в html в родителя .modal:\r\n        document.querySelector('.modal').append(thanksModal);\r\n\r\n        //Чтобы модальное окно вернулась в исходный вид спустя 2 сек:\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        }, 2000);\r\n    }\r\n\r\n    //Получаем menu с json-server по GET запросу:\r\n    fetch('http://localhost:3000/menu')\r\n        .then(data => data.json())//превращаем данные от сервера в JSON формат\r\n        .then(res => console.log(res));//результат выведем в консоль\r\n}\r\n\r\nexport default forms;","function openModal(modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    // modal.classList.toggle('show');\r\n    document.body.style.overflow = 'hidden'; //Для того чтобы при открытии модалки невозможно было взаимодействовать с другими элементами\r\n\r\n    //\r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId); //Если юзер уже открыл модалку, таймер сброситься\r\n    }\r\n\r\n}\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    // modal.classList.toggle('show');\r\n    document.body.style.overflow = '';\r\n}\r\n\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n    //Modal\r\n\r\n    const modalTrigger = document.querySelectorAll(triggerSelector),\r\n          modal = document.querySelector(modalSelector);\r\n\r\n\r\n    //Оборачиваем функцию openModal в другую колбэк функцию потому что нельзя чтобы эта функцию сразу вызывалась иначе у нас этот элемент будет отрисован еще до клика\r\n    modalTrigger.forEach(btn => {\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n    });\r\n \r\n    //Для того чтобы модалка закрывалась при клике на подложку и на элемент с дата атрибутом data-close:\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    //Для того чтобы модалка закрывалась при нажатии на Ecsape:\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === \"Escape\" && modal.classList.contains('show')) {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    //Для того чтобы модалка открывалась Однократно когда юзер заскролил страницу до конца вниз (-1 пиксель в конце для того чтобы скрипт срабатывал без ошибок):\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight -1) {\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n\r\n    // const compstyle = window.getComputedStyle(modal);\r\n    // function showModal() {\r\n    //     modalTrigger.forEach((button) => {\r\n    //         button.addEventListener('click', () => {\r\n    //             if (compstyle.display == 'none') {\r\n    //                 modal.style.display = 'block';\r\n    //             };\r\n    //         })\r\n    //     })\r\n\r\n    // };\r\n\r\n    // function closeModal() {        \r\n    //     close_btn.addEventListener('click', () => {\r\n    //         modal.style.display = 'none';\r\n    //     })\r\n\r\n    // } \r\n\r\n    // showModal();\r\n    // closeModal();\r\n}\r\n\r\nexport default modal;\r\nexport {closeModal};\r\nexport {openModal};","function slider({container, slide, nextArrow, prevArrow, totalCuinter, currentCounter, wrapper, field}) {\r\n    //Slider\r\n\r\n    const slides = document.querySelectorAll(slide),\r\n        slider = document.querySelector(container),\r\n        prev = document.querySelector(prevArrow),\r\n        next = document.querySelector(nextArrow),\r\n        total = document.querySelector(totalCuinter),\r\n        current = document.querySelector(currentCounter),\r\n        slidesWrapper = document.querySelector(wrapper),\r\n        slidesField = document.querySelector(field),\r\n        width = window.getComputedStyle(slidesWrapper).width; \r\n    \r\n    //Создаем и устанавливаем индекс для слайдера:\r\n    let slideIndex = 1;  \r\n    //Чтобы знать на соклько мы отсутпили вправо или влево с помощью transorm\r\n    let offset = 0;\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    //Установим ширину блоку (чтобы все слайды разместились в один ряд по ширине) как 400% (так как 4 слайда) от своего родителя (offer__slider-wrapper):\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    //Огриничим показ в блоке offer__slider-wrapper чтобы был виден только один слайд\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    //Так как слайды могут быть разной ширины, мы перебираем все слайды и устанавливаем им ту ширину которая есть в computed style у блока который показывает нам текущий слайд:\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    const indicators = document.createElement('ol'),\r\n        dots = [];\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n\r\n    for(let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    slider.append(indicators);\r\n\r\n    //Создаем функцию которая изменяет прозрачность точек переключения сладов\r\n    function showActiveDots() {\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1; \r\n    }\r\n\r\n    //Создаем функцию которая для чисел показывающих текущее и общее кол-во слайдов добавляет 0 если это число до 10\r\n    function addZero() {\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    } \r\n\r\n    next.addEventListener('click', () => {\r\n        //Вычисялем ширину offset на которую нам надо будет потом переместиться вправо(так как у нас из width приходит '650px' мы с помощью регулярных выражений находим все не числа и заменяем их на пустую строку, то есть отбрасываем)\r\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNotDigits(width);\r\n        }\r\n\r\n        //Перемещаем вправо на вычисленное значение offset\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        addZero();\r\n\r\n        showActiveDots();\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        //Делаем наоборот сперва проверяем если  \r\n        if (offset == 0) {\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n\r\n        //Перемещаем вправо или влево на вычисленное значение offset\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        addZero();\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = deleteNotDigits(width) * (slideTo - 1); \r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            addZero();\r\n\r\n            showActiveDots();\r\n        });\r\n    });\r\n\r\n\r\n    //Варинат более простого слайдера:\r\n\r\n    // //Вызываем функцию чтобы показать изначайный слайд и скрыть все остальные слайды \r\n    // showSlides(slideIndex);\r\n\r\n    // //Показываем общее кол-во слайдов (в числах до 10 прописываем вначале 0) (если прописать это условие в самой функции то у нас при переключении слайдов цифра с общим кол-вом слайдов будет обновляться и мигать):\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;\r\n    // }\r\n \r\n    // //Создаем функцию в котрой как аргумент будет приходить наш slideIndex с текущим номером\r\n    // function showSlides(n) {\r\n    //     //Проверяем если индекс слайда будет больше чем кол-во слайдов которые есть у нас в верстке то мы перемещаеся в самое начало:\r\n    //     if (n > slides.length) {\r\n    //         slideIndex = 1;\r\n    //     }\r\n\r\n    //     //Проверяем, если мы из начального слайда перемаемся в предыдущий, т.е. в самый конец то мы устанавливаем ему последнее значение\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n\r\n    //     //Скрываем все слайды которые есть и показываем текущий:\r\n    //     slides.forEach(item => item.style.display = 'none');\r\n\r\n    //     //Обращаеся к найденному псевдомассиву и для (Номер элемента - 1) так как  у нас slideIndex начинается с 1 а не с 0 как в массиве\r\n    //     slides[slideIndex - 1].style.display = 'block';\r\n        \r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n    // }\r\n\r\n    // //Создаем функцию для переключения слайдера котороая принимает как аргумент наш slideIndex и вызывавет функцию showSlides. К нам приходит n = -1 если мы нажимаем на срелку prev и приходит n = 1 если нажимаем на next\r\n    // function plusSlides(n) {\r\n    //     showSlides(slideIndex += n);\r\n    // }\r\n\r\n    // //Добавляем обработчики событий для кнопок слайдера:\r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlides(-1);\r\n    // });\r\n\r\n    // next.addEventListener('click', () => {\r\n    //     plusSlides(1);\r\n    // });\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabParentSelector, activeClass) {\r\n    //Tabs\r\n\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n    tabsContent = document.querySelectorAll(tabsContentSelector),\r\n    tabsParent = document.querySelector(tabParentSelector);\r\n\r\n    //Добавляем функцию которая будет добавлять класс hide и удалять класс show для каждой найденной вкладки:\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    } //i = 0 это дефолтное значение, то есть начинаем с 0 элемента\r\n    \r\n    hideTabContent();\r\n    showTabContent(); \r\n\r\n    //Создаем обработчик событий который будет по клику на вкладки запускать наши функиции:\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target; //для простоты испльзования\r\n\r\n        //Так как в tabsSelector нам приходит строка с точкой вначале '.tabheader__item' мы с помощью метода slice отрезаем первый символ:\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);               \r\n                } //проверка на то, что пользователь кликнул именно на тот таб который перебирается в данный момент\r\n\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer(id, deadline) {\r\n    //Timer\r\n\r\n    //Создаем функцию для расчета таймера:\r\n    function getTimeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n                days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n                hours = Math.floor((t / (1000 * 60 * 60 ) % 24)),\r\n                minutes = Math.floor((t / 1000 / 60) % 60),\r\n                seconds = Math.floor((t / 1000) % 60);\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    //Добавление нуля для чисел до 10\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    //Находим на странице наши элементы таймера:\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n\r\n            updateClock(); //Используем чтобы наш таймер запускался сразу как пользователь зашел на страницу\r\n\r\n        //Добавляем функцию для обновления нашего таймера\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            //Когда таймер дойдет до 0 (кол-во мс заданной даты минус кол-во мс настоящей даты будет равно 0) отключаем таймер:\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock(id, deadline);\r\n}\r\n\r\nexport default timer;","    //Создаем функцию POST запроса на серв:\r\n    const postData = async (url, data) => {\r\n        //Посылаем запрос на сервер по url который передаем как аргумент функции (у нас асинхронный код, который сперва делает запрос, ждет ответа от сервера и пока он ждет ответа у нас в переменную res ничего не записывается, поэтому чтобы не было ошибки перед функцией ставим async которая говорит что у нас будет асинхронный код, и перед асинхронным кодом ставим await(js будет ждать окончания запроса и потом только подставит в переменную и пойдет выполняться дальше)):\r\n        const res = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json; charset=utf-8'\r\n            },\r\n            body: data //сюда прописываем то, что мы передаем на сервер(у нас это FormData в формате JSON)\r\n        });\r\n\r\n        return await res.json(); //трансформируем полученный ответ в json, по перед этим прописываем так же await так как мы не знаем сколько времени займет эта трансформация\r\n    };\r\n\r\n    //Создаем функцию GET запроса с сервера:\r\n    async function getResource(url) {\r\n        //Посылаем запрос на сервер по url который передаем как аргумент функции (у нас асинхронный код, который сперва делает запрос, ждет ответа от сервера и пока он ждет ответа у нас в переменную res ничего не записывается, поэтому чтобы не было ошибки перед функцией ставим async которая говорит что у нас будет асинхронный код, и перед асинхронным кодом ставим await(js будет ждать окончания запроса и потом только подставит в переменную и пойдет выполняться дальше)):\r\n        let res = await fetch(url);\r\n\r\n        //Обрабатываем поведение fetch чтобы отлавливать ошибки(fetch если столкнется с какой то ошибкой в http запросе он не выдаст catch(reject) а выдаст только при отстутсвии инета или других критических ошибок в самом запросе):\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`); //создаем объект ошибки куда помещаем текст ошибки c помошью метода throw(выкидывает из функции)\r\n        }\r\n\r\n        return await res.json(); //трансформируем полученный ответ в json, по перед этим прописываем так же await так как мы не знаем сколько времени займет эта трансформация\r\n    }\r\n\r\n\r\n    export {postData};\r\n    export {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport calc from './modules/calc';\r\nimport {openModal} from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n    //Для того чтобы модалка открывалась через определенное время:\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000);\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    timer('.timer', '2022-02-01');\r\n    cards();\r\n    forms('form', modalTimerId);\r\n    slider({\r\n        container: '.offer__slider',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        slide: '.offer__slide',\r\n        totalCuinter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner'\r\n    });\r\n    calc();\r\n});\r\n\r\n\r\n"],"names":[],"sourceRoot":""}